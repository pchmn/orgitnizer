name: Orgitz CI

on:
  push:
    # Run on all branches
    branches:
      - "**"
    # Run only if files modified are not docs
    paths-ignore:
      - "*.md"
  pull_request:
    # Run on all branches
    branches:
      - "**"
    # Run only if files modified are not docs
    paths-ignore:
      - "*.md"

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

jobs:

  # Build & Test Web
  buildAndTestWeb:
    name: (WEB) Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # - name: Get Web changed files
      #   id: changed-files-web
      #   uses: tj-actions/changed-files@v23
      #   with:
      #     files: |
      #       !*.md
      #       packages/web/**

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      # pnpm cache
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      # Install
      - name: Install
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.32.3
          run_install: true

      # Build
      - name: Build
        run: pnpm build:web

      # Upload dist artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: dist-web
          path: packages/web/dist/

  # Build & Test Functions
  buildAndTestFunctions:
    name: (FUNCTIONS) Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      # pnpm cache
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      # Install
      - name: Install
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.32.3
          run_install: true

      # Build
      - name: Build
        run: pnpm build:functions

      # Upload dist artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: dist-functions
          path: packages/functions/dist/

  # Publish web container
  publishWebDockerImage:
    name: (WEB) Publish Docker Image
    needs: buildAndTestWeb
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Download dist artifacts
      - uses: actions/download-artifact@v2
        with:
          name: dist-web
          path: packages/web/dist/

      - name: Build and Publish Image
        uses: docker/build-push-action@v1
        with:
          registry: ghcr.io
          username: "pchmn"
          password: ${{ env.GITHBU_TOKEN }}
          repository: pchmn/orgitz-web
          tags: latest
